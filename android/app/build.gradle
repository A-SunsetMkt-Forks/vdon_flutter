def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutteVersionName = localProperties.getProperty('flutter.versionName')
if (flutteVersionName == null) {flutteVersionName = '1.0.0'}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {flutterVersionCode = 1}


apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
   keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    compileSdkVersion 33


    defaultConfig {
        applicationId "flutter.vdo.ninja"
        minSdkVersion 21 
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutteVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


	signingConfigs {
		release {
		   keyAlias keystoreProperties['keyAlias']
		   keyPassword keystoreProperties['keyPassword']
		   storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
		   storePassword keystoreProperties['storePassword']
		}
	}
	buildTypes {
	    release {
		   signingConfig signingConfigs.release
		   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
	    }
	}
    packagingOptions {
        resources {
            excludes += ['META-INF/proguard/androidx-annotations.pro']
        }
    }
    lint {
        disable 'InvalidPackage'
    }
	
    namespace 'de.julianassmann.flutter_background_example'
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
